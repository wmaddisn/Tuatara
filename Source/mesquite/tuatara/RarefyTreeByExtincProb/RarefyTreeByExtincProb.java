/* Mesquite source code, Tuatara package.  Copyright 2007 W. Maddison & A. Mooers. Version 1.01, August 2009Disclaimer:  The Mesquite source code is lengthy and we are few.  There are no doubt inefficiencies and goofs in this code. The commenting leaves much to be desired. Please approach this source code with the spirit of helping out.Perhaps with your help we can be more than a few, and make Mesquite better.Mesquite is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.Mesquite's web site is http://mesquiteproject.orgThis source code and its compiled class files are free and modifiable under the terms of GNU Lesser General Public License.  (http://www.gnu.org/copyleft/lesser.html) */package mesquite.tuatara.RarefyTreeByExtincProb;/*~~  */import mesquite.cont.lib.ContinuousDistribution;import mesquite.cont.lib.ContinuousState;import mesquite.lib.*;import mesquite.lib.duties.*;import mesquite.treefarm.lib.*;/* ======================================================================== */public class RarefyTreeByExtincProb extends RndTreeModifier {	CharSourceCoord characterSourceTask;	/*.................................................................................................................*/	public boolean startJob(String arguments, Object condition, boolean hiredByName) {		characterSourceTask = (CharSourceCoord)hireCompatibleEmployee(CharSourceCoord.class, ContinuousState.class, "Source of characters for " + getName());		if (characterSourceTask == null) {			return sorry(getName() + " couldn't start because no source of characters obtained.");		}		return true;	}	/*.................................................................................................................*/	public Snapshot getSnapshot(MesquiteFile file) { 		Snapshot temp = super.getSnapshot(file);		temp.addLine( "getCharacterSource " , characterSourceTask);		return temp;	}	/*.................................................................................................................*/	public Object doCommand(String commandName, String arguments, CommandChecker checker) {		if (checker.compare(this.getClass(), "Returns module supplying characters", null, commandName, "getCharacterSource")) {			return characterSourceTask;		}		else			return  super.doCommand(commandName, arguments, checker);	}	/*.................................................................................................................*/	public void modifyTree(Tree tree, MesquiteTree modified, RandomBetween rng){		if (tree == null || modified == null)			return;		ContinuousDistribution states = (ContinuousDistribution)characterSourceTask.getCurrentCharacter(tree);		int[] terminals =tree.getTerminalTaxa(tree.getRoot());		if (terminals == null)			return;		boolean tryAgain = true;		int count = 0;		while (tryAgain && count<100){			tryAgain = false;			for (int i= 0; i< terminals.length && !tryAgain; i++){				double probExtinction = states.getState(terminals[i], 0);				if (rng.nextDouble()<probExtinction){					int nT = modified.nodeOfTaxonNumber(terminals[i]);					modified.deleteClade(nT, false);				}				if (modified.numberOfTerminalsInClade(modified.getRoot()) == 0 && tree instanceof MesquiteTree){					tryAgain = true;					count++;					modified.setToClone((MesquiteTree)tree);				}			}		}		if (count == 100)			discreetAlert( "Failed to supply rarefied tree because in each of 100 attempts tree went extinct entirely");	}	/*.................................................................................................................*/	public String getParameters() {		return "Taxa going extinct by characters from: " + characterSourceTask.getNameAndParameters();	}	/*.................................................................................................................*/	public String getName() {		return "Rarefy Tree By Extinction Probabilities";	}	public boolean isPrerelease(){		return false;	}	/*.................................................................................................................*/	public boolean showCitation(){		return true;	}	/*.................................................................................................................*/	public String getExplanation() {		return "Rarefies tree by randomly excluding taxa according to their extinction probabilities.";	}}